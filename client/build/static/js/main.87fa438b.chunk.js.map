{"version":3,"sources":["styles/global.js","components/Header.js","components/Sidebar.js","helpers/DateDiff.js","components/TicketNotes.js","components/TicketDetails.js","components/CreateTicketModal.js","components/TicketList.js","pages/Tickets.js","components/Dashboard.js","pages/Dashboard.js","pages/ManageRoles.js","pages/ManageUsers.js","components/AddProjectModal.js","components/ProjectsList.js","pages/Projects.js","pages/Login.js","pages/Register.js","App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Header","Main","Nav","Left","Right","SearchBar","style","paddingRight","type","name","id","placeholder","styled","div","ul","Sidebar","SidebarLink","to","Link","DateDiff","oldDate","date1","Date","getTime","date2","minutes","Math","floor","hours","days","months","years","TicketNotes","data","notes","i","ticketComment","length","push","ticketHistory","sort","a","b","created","map","note","TicketComment","user","comment","_id","TicketChange","propertyChanged","oldValue","newValue","TicketDetails","index","useState","isEdited","setIsEdited","ticketPriority","ticketType","ticketStatus","state","setState","handleChange","event","target","value","preventDefault","arr","firstName","sessionStorage","getItem","lastName","fullName","property","fetch","method","mode","headers","body","JSON","stringify","window","location","reload","Wrapper","className","title","onClick","marginTop","assignedDev","submitter","onChange","description","cols","rows","CreateTicketModal","props","projects","setProjects","project","handleSubmit","reRender","closeModal","useEffect","response","json","unshift","fetchProjects","modal","Overlay","ModalWrapper","onSubmit","ReactDOM","createPortal","document","getElementById","TicketList","show","setShow","runTickets","setRunTickets","tickets","updateTickets","ticketIndex","updateticketIndex","fetchTickets","dateConverter","dateTime","date","substr","split","splice","join","TableTitle","Table","ticket","createdOn","table","Tickets","Dashboard","setData","fetchData","ticketNum","ticketsBug","ticketsOpen","ticketsInProgress","ticketsHighest","ticketsHigh","DashboardPage","ManageRoles","ManageUsers","AddProjectModal","history","useHistory","console","log","ProjectsList","updateProjects","Projects","Login","email","password","error","status","setItem","token","LoginWrapper","LoginForm","form","then","res","Object","prototype","hasOwnProperty","call","App","path","exact","component","Register","Boolean","hostname","match","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.87fa438b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0; \r\n    border: 0;\r\n    box-sizing: border-box;\r\n  }  \r\n  \r\n  *:focus {\r\n    outline: 0;\r\n  }  \r\n  \r\n  html, body, #root {\r\n    height: 100%;\r\n  }  \r\n  \r\n  body {\r\n    -webkit-font-smoothing: antialiased;\r\n  }  \r\n  \r\n  body, input, button {\r\n    font: 14px 'Roboto', sans-serif;\r\n  }  \r\n  \r\n  a {\r\n    text-decoration: none;\r\n  }  \r\n  \r\n  ul {\r\n    list-style: none;\r\n  }  \r\n  \r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <Main>\r\n      <Nav>\r\n        <Left>\r\n          <h3>Issue Tracker</h3>\r\n        </Left>\r\n        <Right>\r\n          <SearchBar>\r\n            <FaSearch style={{ paddingRight: '.25rem' }} />\r\n            <input type=\"search\" name=\"search\" id=\"search\" placeholder=\"Search...\" />\r\n          </SearchBar>\r\n          <li>Notifications</li>\r\n          <li>User</li>\r\n        </Right>\r\n      </Nav>\r\n    </Main>\r\n  );\r\n}\r\n\r\nconst Main = styled.div`\r\ngrid-area: header;\r\nheight: 65px;\r\nbackground: #128DEB;\r\n`;\r\n\r\nconst Nav = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding-top: 1.5rem;\r\n`;\r\n\r\nconst Left = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n\r\nh3{\r\n  padding: 0 2rem;\r\n  color: white;\r\n}\r\n\r\n`;\r\n\r\nconst Right = styled.ul`\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-right: 2rem;\r\n\r\nli {\r\n  padding: 0 1rem;\r\n  color: white;\r\n}\r\n`;\r\n\r\nconst SearchBar = styled.div`\r\nmargin-left: 2rem;\r\ndisplay: inline-flex;\r\nbackground: #128DEB;\r\noverflow: hidden;\r\ncolor: white;\r\ninput {\r\n  border-style:hidden;\r\n  background: #128DEB;\r\n  width: 15rem;\r\n  color: white;\r\n}\r\ninput: focus {\r\n  outline: none;\r\n}\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <Main>\r\n            <ul>\r\n                <li><SidebarLink to=\"/dashboard\">Dashboard</SidebarLink></li>\r\n                <li><SidebarLink to=\"/projects\">Projects</SidebarLink></li>\r\n                <li><SidebarLink to=\"/tickets\">Tickets</SidebarLink></li>\r\n                <li><SidebarLink to=\"/manageroles\">Manage Roles</SidebarLink></li>\r\n                <li><SidebarLink to=\"/manageusers\">Manage Users</SidebarLink></li>\r\n            </ul>\r\n        </Main>\r\n    );\r\n}\r\n\r\nconst Main = styled.div`\r\ngrid-area: sidebar;\r\nheight: calc(100vh - 65px);\r\nwidth: 130px;\r\nbackground: #a0d1f7;\r\nborder-right: solid 1px #ddd;\r\nul {\r\n    margin-left: 1rem;\r\n   height: 100%\r\n}\r\nli {\r\npadding: 1rem 0;\r\njustify-content: space-between;\r\n}\r\n`;\r\n\r\nconst SidebarLink = styled(Link)`\r\ncolor: black;\r\n`;","export default function DateDiff(oldDate) {\r\n    const date1 = new Date(oldDate).getTime();\r\n    const date2 = new Date();\r\n\r\n    // return minutes if less than 60\r\n    let minutes = Math.floor((date2 - date1) / 60000)\r\n    if (minutes < 60) {\r\n        return `${minutes} minutes ago`\r\n    }\r\n    // return hours if less than 24\r\n    let hours = Math.floor((date2 - date1) / (60000 * 60));\r\n    if (hours < 24) {\r\n        return `${hours} hours ago`\r\n    }\r\n    // returndays if less than 30\r\n    let days = Math.floor((date2 - date1) / (60000 * 60 * 24))\r\n    if (days < 30) {\r\n        return `${days} days ago`\r\n    }\r\n    // return months if less than 12\r\n    let months = Math.floor((date2 - date1) / (60000 * 60 * 24 * 30))\r\n    if (months < 12) {\r\n        return `${months} months ago`\r\n    }\r\n    // return years\r\n    let years = Math.floor((date2 - date1) / (60000 * 60 * 24 * 30 * 12))\r\n    return `${years} years ago`\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport DateDiff from \"../helpers/DateDiff\"\r\n\r\nexport default function TicketNotes(data) {\r\n  const notes = []\r\n  for (let i = 0; i < data.data.ticketComment.length; i++) {\r\n    notes.push(data.data.ticketComment[i])\r\n  }\r\n  for (let i = 0; i < data.data.ticketHistory.length; i++) {\r\n    notes.push(data.data.ticketHistory[i])\r\n  }\r\n  notes.sort((a, b) => {\r\n    let da = new Date(a.created)\r\n    let db = new Date(b.created)\r\n    return da - db\r\n  })\r\n\r\n\r\n  return (\r\n    <div>\r\n      {notes\r\n        .map((note => {\r\n          if ('comment' in note) {\r\n            return (\r\n              <TicketComment key={note._id}>\r\n                <div>\r\n                  {note.user}\r\n                  {' '}\r\n                  commented\r\n                  {' '}\r\n                  <span>\r\n\r\n                    {DateDiff(\r\n                      note.created\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <p>\r\n                  {note.comment}\r\n                </p>\r\n              </TicketComment>\r\n            );\r\n          }\r\n          if ('oldValue' in note) {\r\n            return (\r\n              <TicketChange key={note._id}>\r\n                <p>\r\n                  {note.user}\r\n                  {' '}\r\n                  changed\r\n                  {' '}\r\n                  {note.propertyChanged}\r\n                  {' '}\r\n                  from\r\n                  {' '}\r\n                  {note.oldValue}\r\n                  {' '}\r\n                  to\r\n                  {' '}\r\n                  {note.newValue}\r\n                  <span>\r\n                    {DateDiff(\r\n                      note.created,\r\n                    )}\r\n                  </span>\r\n                </p>\r\n\r\n              </TicketChange>\r\n            );\r\n          }\r\n          return null;\r\n        }))}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst TicketChange = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nbackground: #E7F3FD;\r\nmargin: .5rem;\r\npadding: .5rem;\r\n\r\nspan {\r\n  padding-top: .25rem;\r\n  padding-left: .25rem;\r\n    font-size: 12px;\r\n    color: #B2B9BE; \r\n}\r\n`;\r\n\r\nconst TicketComment = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\npadding: .5rem;\r\n\r\ndiv {\r\n   \r\n    padding: .5rem;\r\n    background: #E7F3FD;\r\n}\r\nspan {\r\n  padding-top: .25rem;\r\n    font-size: 12px;\r\n    color: #B2B9BE; \r\n}\r\np {\r\n    margin-top: .25rem;\r\n    padding: .75rem;\r\n    border-left: solid 1px #ccc;\r\n}\r\n`;\r\n","import React, { useState } from 'react'\r\nimport TicketNotes from \"./TicketNotes\"\r\nimport styled from \"styled-components\"\r\nimport { FaEdit } from 'react-icons/fa';\r\n\r\nexport default function TicketDetails({ data, index }) {\r\n  const [isEdited, setIsEdited] = useState(false)\r\n  const [state, setState] = useState({\r\n    ticketPriority: \"\",\r\n    ticketType: \"\",\r\n    ticketStatus: \"\",\r\n    ticketComment: \"\"\r\n  })\r\n\r\n  function handleChange(event) {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault()\r\n    const arr = []\r\n    const firstName = sessionStorage.getItem(\"firstName\")\r\n    const lastName = sessionStorage.getItem(\"lastName\")\r\n    const fullName = `${firstName} ${lastName}`\r\n    // verify if each input is different\r\n    // if an input is different add object of data to an array\r\n    if (data.ticketType !== state.ticketType && state.ticketType !== \"\") {\r\n      arr.push({\r\n        user: fullName,\r\n        propertyChanged: \"Ticket Type\",\r\n        property: \"ticketType\",\r\n        oldValue: data.ticketType,\r\n        newValue: state.ticketType\r\n      })\r\n    }\r\n    if (data.ticketStatus !== state.ticketStatus && state.ticketStatus !== \"\") {\r\n      arr.push({\r\n        user: fullName,\r\n        propertyChanged: \"Ticket Status\",\r\n        property: \"ticketStatus\",\r\n        oldValue: data.ticketStatus,\r\n        newValue: state.ticketStatus\r\n      })\r\n    }\r\n    if (data.ticketPriority !== state.ticketPriority && state.ticketPriority !== \"\") {\r\n      arr.push({\r\n        user: fullName,\r\n        propertyChanged: \"Ticket Priority\",\r\n        property: \"ticketPriority\",\r\n        oldValue: data.ticketPriority,\r\n        newValue: state.ticketPriority\r\n      })\r\n    }\r\n    // iterate through array of objects and send each item to API end point\r\n    for (let i = 0; i < arr.length; i++) {\r\n      await fetch(\"/api/v1/tickethistory\", {\r\n        method: \"PUT\",\r\n        mode: \"cors\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          id: data._id,\r\n          user: arr[i].user,\r\n          propertyChanged: arr[i].propertyChanged,\r\n          property: arr[i].property,\r\n          oldValue: arr[i].oldValue,\r\n          newValue: arr[i].newValue\r\n        })\r\n      })\r\n    }\r\n    // after complettion set isEdited to false\r\n    setIsEdited(false)\r\n    window.location.reload()\r\n\r\n  }\r\n\r\n  async function submitComment() {\r\n    const firstName = sessionStorage.getItem(\"firstName\")\r\n    const lastName = sessionStorage.getItem(\"lastName\")\r\n    const fullName = `${firstName} ${lastName}`\r\n    await fetch(\"/api/v1/ticketcomment\", {\r\n      method: \"PUT\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: data._id,\r\n        user: fullName,\r\n        comment: state.ticketComment\r\n      })\r\n    })\r\n    setState({ ticketComment: \"\" })\r\n    window.location.reload()\r\n  }\r\n\r\n  function toggleEdited() {\r\n    if (isEdited) {\r\n      setIsEdited(false)\r\n    } else {\r\n      setIsEdited(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"ticketInfo\" key={index}>\r\n        <div className=\"ticketTitle\">\r\n          <h2>{data.title}</h2>\r\n          <span onClick={toggleEdited}>\r\n            <FaEdit style={{ marginTop: \".25rem\" }} />\r\n          Edit\r\n          </span>\r\n        </div>\r\n        <div className=\"info\">\r\n          <div>\r\n            <section className=\"infoItem\">\r\n              <p>Assigned To</p>\r\n              <p>{data.assignedDev}</p>\r\n            </section>\r\n            <section className=\"infoItem\">\r\n              <p>Created By</p>\r\n              <p>{data.submitter}</p>\r\n            </section>\r\n          </div>\r\n\r\n          {isEdited ?\r\n            <div>\r\n              <section className=\"infoItem\">\r\n                <p>Type</p>\r\n                <select\r\n                  name=\"ticketType\"\r\n                  value={state.ticketType}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">-</option>\r\n                  <option value=\"Bug\">Bug</option>\r\n                  <option value=\"New Feature\">New Feature</option>\r\n                  <option value=\"Improvement\">Improvement</option>\r\n                  <option value=\"Task\">Task</option>\r\n                  <option value=\"Testing\">Testing</option>\r\n                </select>\r\n              </section>\r\n              <section className=\"infoItem\">\r\n                <p>Status</p>\r\n                <select\r\n                  name=\"ticketStatus\"\r\n                  value={state.ticketStatus}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">-</option>\r\n                  <option value=\"Open\">Open</option>\r\n                  <option value=\"Resolved\">Resolved</option>\r\n                  <option value=\"Closed\">Closed</option>\r\n                  <option value=\"Reopened\">Reopened</option>\r\n                  <option value=\"In Progress\">In Progress</option>\r\n                </select>\r\n              </section>\r\n              <section className=\"infoItem\">\r\n                <p>Priority</p>\r\n                <select\r\n                  name=\"ticketPriority\"\r\n                  value={state.ticketPriority}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">-</option>\r\n                  <option value=\"Lowest\">Lowest</option>\r\n                  <option value=\"Low\">Low</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"High\">High</option>\r\n                  <option value=\"Highest\">Highest</option>\r\n                </select>\r\n              </section>\r\n              <button onClick={handleSubmit} className=\"submitBtn\">Submit</button>\r\n            </div>\r\n            :\r\n            <div>\r\n              <section className=\"infoItem\">\r\n                <p>Type</p>\r\n                <p>{data.ticketType}</p>\r\n              </section>\r\n              <section className=\"infoItem\">\r\n                <p>Status</p>\r\n                <p>{data.ticketStatus}</p>\r\n              </section>\r\n              <section className=\"infoItem\">\r\n                <p>Priority</p>\r\n                <p>{data.ticketPriority}</p>\r\n              </section>\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <p className=\"description\">{data.description}</p>\r\n      </div >\r\n      <TicketNotes data={data} />\r\n      <div className=\"ticketComment\">\r\n        <textarea name=\"ticketComment\" value={state.ticketComment} onChange={handleChange} cols=\"30\" rows=\"10\" />\r\n        <button onClick={submitComment} type=\"submit\">Submit</button>\r\n      </div>\r\n    </Wrapper>)\r\n}\r\n\r\n\r\n\r\nconst Wrapper = styled.div`\r\nbackground: white;\r\nborder-left: 1px solid #ccc;\r\n\r\n.ticketTitle {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-top: .5rem;\r\n  h2{\r\n    margin-left: .25rem;\r\n  }\r\n  span{\r\n    cursor: pointer;\r\n    margin-right: 2rem; \r\n    padding: .5rem;\r\n    color: white;\r\n    background: #EB7012;\r\n    border-radius: 5px;\r\n  }\r\n}\r\n\r\n.description{\r\n  padding-top: .5rem;\r\n}\r\n.infoItem{\r\n  ${'' /* margin: .5rem 0; */}\r\n  padding: .5rem;\r\n  \r\n p:nth-child(1) {\r\n   text-transform: uppercase;\r\n   color: #ABB1B6;\r\n   font-weight: 500;\r\n   padding-bottom: .25rem;\r\n }\r\n}\r\n.info{\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: space-between;\r\n  border-bottom: solid 1px #ddd;\r\n  margin: 0 1rem;\r\n  div{\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  select{\r\n    border: 1px solid black;\r\n  }\r\n  .submitBtn{\r\n    width: 8rem;\r\n    padding: .5rem;\r\n    margin: .5rem;\r\n    background: #EB7012;\r\n    color: white;\r\n    border-radius: 5px;\r\n}\r\n}\r\n.ticketInfo{\r\n  margin: .5rem;\r\n  h2{\r\n  padding: 0.5rem 0;\r\n  }\r\n}\r\n\r\n.ticketComment {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40rem;\r\n  margin: 0 1rem ;\r\n\r\ninput[type=text] {\r\n  \r\n  height: 5rem;\r\n  border: solid 1px black;\r\n}\r\n\r\ntextarea {\r\n  border: solid 1px black;\r\n}\r\n\r\nbutton {\r\n  margin-top: .5rem;\r\n  padding: .5rem;\r\n  width: 6rem;\r\n  background: #EB7012;\r\n  color: white;\r\n  border-radius: 5px;\r\n}\r\n}\r\n`","import React, { useEffect, useState } from 'react'\r\nimport ReactDOM from \"react-dom\"\r\nimport styled from \"styled-components\"\r\n\r\nexport default function CreateTicketModal(props) {\r\n    const [projects, setProjects] = useState([])\r\n    const [state, setState] = useState({\r\n        project: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        ticketType: \"\",\r\n        ticketPriority: \"\",\r\n        user: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        async function fetchProjects() {\r\n            const response = await fetch(\"/api/v1/projects/dropdown\")\r\n            const json = await response.json()\r\n            const data = json.data\r\n            data.unshift({ _id: 0, title: \"-\" })\r\n            setProjects(json.data)\r\n        }\r\n        fetchProjects()\r\n    }, [])\r\n\r\n    function handleChange(event) {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        const firstName = sessionStorage.getItem(\"firstName\")\r\n        const lastName = sessionStorage.getItem(\"lastName\")\r\n        const fullName = `${firstName} ${lastName}`\r\n        await fetch(\"/api/v1/tickets\", {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                project: state.project,\r\n                title: state.title,\r\n                description: state.description,\r\n                assignedDev: fullName,\r\n                submitter: fullName,\r\n                ticketPriority: state.ticketPriority,\r\n                ticketType: state.ticketType\r\n            })\r\n        })\r\n        reRender()\r\n        closeModal()\r\n    }\r\n\r\n    const { reRender, closeModal } = props\r\n    const modal = (\r\n        <>\r\n            <Overlay />\r\n            <ModalWrapper >\r\n                <button className=\"closeBtn\" onClick={closeModal}>X</button>\r\n                <h1>Create A Ticket</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <label>\r\n                        Project\r\n                        <select\r\n                            name=\"project\"\r\n                            value={state.project}\r\n                            onChange={handleChange}\r\n                        >\r\n                            {projects.map((project, _id) => (\r\n                                < option key={project._id} value={project.title} >  { project.title}</option>\r\n                            ))}\r\n                        </select>\r\n                    </label>\r\n                    <input\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        value={state.title}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Title\"\r\n                    />\r\n\r\n                    <input\r\n                        name=\"description\"\r\n                        type=\"text\"\r\n                        value={state.description}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Description\"\r\n                    />\r\n                    <label>\r\n                        Ticket Priority\r\n                        <select\r\n                            name=\"ticketPriority\"\r\n                            value={state.ticketPriority}\r\n                            onChange={handleChange}>\r\n                            <option value=\"\">-</option>\r\n                            <option value=\"Lowest\">Lowest</option>\r\n                            <option value=\"Low\">Low</option>\r\n                            <option value=\"Medium\">Medium</option>\r\n                            <option value=\"High\">High</option>\r\n                            <option value=\"Highest\">Highest</option>\r\n                        </select>\r\n                    </label>\r\n                    <label>\r\n                        Ticket Type\r\n                        <select\r\n                            name=\"ticketType\"\r\n                            value={state.ticketType}\r\n                            onChange={handleChange}>\r\n                            <option value=\"\">-</option>\r\n                            <option value=\"Bug\">Bug</option>\r\n                            <option value=\"New Feature\">New Feature</option>\r\n                            <option value=\"Improvement\">Improvement</option>\r\n                            <option value=\"Task\">Task</option>\r\n                            <option value=\"Testing\">Testing</option>\r\n                        </select>\r\n                    </label>\r\n                    <button onClick={handleSubmit} className=\"submitBtn\">Submit</button>\r\n                </form>\r\n\r\n\r\n            </ModalWrapper>\r\n        </>\r\n    )\r\n    return ReactDOM.createPortal(modal, document.getElementById(\"portal\"))\r\n}\r\n\r\nconst Overlay = styled.div`\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground-color: rgba(255, 255, 255, .6);\r\n-webkit-backdrop-filter: blur(2px);\r\nbackdrop-filter: blur(2px);\r\n \r\n`\r\nconst ModalWrapper = styled.div` \r\nposition: absolute;\r\ntop: 10%;\r\nleft: 25%;\r\nwidth: 30rem;\r\nheight: 20rem;\r\nbackground:#128DEB;\r\nborder-radius: 10px;\r\n\r\nform{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\nh1 {\r\n    text-align: center;\r\n    padding:  .5rem 0;\r\n    margin-top: .5rem;\r\n    color: white;\r\n}\r\nlabel{\r\n    color: white;\r\n}\r\n\r\ninput[type=text]{\r\n    width: 50%;\r\n    padding: .5rem;\r\n    margin: .25rem;\r\n}\r\n\r\nselect{\r\n    padding: .5rem;\r\n    margin: .25rem;\r\n}\r\n\r\n.submitBtn{\r\n    width: 8rem;\r\n    padding: .5rem;\r\n    margin: .5rem;\r\n    background: #EB7012;\r\n    color: white;\r\n    border-radius: 5px;\r\n}\r\n.closeBtn{\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 15px;\r\n    background:#128DEB;\r\n    color: white;\r\n}\r\n`","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport TicketDetails from \"./TicketDetails\"\r\nimport CreateTicketModal from \"./CreateTicketModal\"\r\n\r\nexport default function TicketList() {\r\n    const [show, setShow] = useState(false)\r\n    const [runTickets, setRunTickets] = useState(false)\r\n    const reRender = () => setRunTickets(true)\r\n    const openModal = () => setShow(true)\r\n    const closeModal = () => setShow(false)\r\n    const [tickets, updateTickets] = useState([])\r\n    const [ticketIndex, updateticketIndex] = useState(\"0\")\r\n    useEffect(() => {\r\n        async function fetchTickets() {\r\n            const response = await fetch(\"/api/v1/tickets\")\r\n            const json = await response.json()\r\n            updateTickets(json.data)\r\n        }\r\n        fetchTickets()\r\n    }, [runTickets])\r\n\r\n    const dateConverter = (dateTime) => {\r\n        const date = dateTime.substr(0, 10).split(\"-\")\r\n        date.push(date.splice(0, 1)[0])\r\n        return date.join(\"/\")\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            < div >\r\n                <TableTitle>\r\n                    <h3>Tickets</h3>\r\n                    <button onClick={openModal}>Create A Ticket</button>\r\n                </TableTitle>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Created</th>\r\n                            <th>Assigned Developer</th>\r\n                            <th>Ticket Priority</th>\r\n                            <th>Ticket Status</th>\r\n                            <th>Ticket Type</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tickets.map((ticket, index) => (\r\n                            <tr key={index} onClick={() => updateticketIndex(index)}>\r\n                                <td>{ticket.title}</td>\r\n                                <td>{dateConverter(ticket.createdOn)}</td>\r\n                                <td>{ticket.assignedDev}</td>\r\n                                <td>{ticket.ticketPriority}</td>\r\n                                <td>{ticket.ticketStatus}</td>\r\n                                <td>{ticket.ticketType}</td>\r\n                            </tr>\r\n                        ))}\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            { !!tickets.length && <TicketDetails key={tickets._id} data={tickets[ticketIndex]} />}\r\n            {show && <CreateTicketModal reRender={reRender} closeModal={closeModal} show={show} />}\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nconst Wrapper = styled.div` \r\ndisplay: flex;\r\nflex: 1;\r\njustify-content: space-between;\r\nbackground: white;\r\ngrid-area: ticketarea;\r\nheight: calc(100vh - 4.25rem);\r\noverflow-y: scroll;\r\n`\r\n\r\nconst Table = styled.table`\r\nwidth: 100%;\r\nborder-collapse: collapse;\r\n\r\nthead th {\r\n    padding: 0.5rem;\r\n    text-align: left;\r\n    background: #e7f3fd;\r\n}\r\n\r\ntd{\r\n  padding: 0.5rem;\r\n  text-align: left;\r\n  border-bottom: solid 1px #EEE;\r\n}\r\ntd:nth-child(1) {\r\n    max-width: 400px;\r\n    white-space: nowrap;\r\n  overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\ntr{\r\n  height: 2rem;\r\n}\r\n`\r\n\r\nconst TableTitle = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding: 1rem 1rem;\r\n\r\nh3 {\r\n    padding-top: .25rem; \r\n}\r\nbutton {\r\n      padding: .5rem;\r\n      background: #eb7012;\r\n      color: white;\r\n      border-radius: 5px;\r\n}\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Sidebar from '../components/Sidebar';\r\nimport TicketList from '../components/TicketList';\r\n\r\nexport default function Tickets() {\r\n  return (\r\n    <div>\r\n      <Main>\r\n        <Header />\r\n        <Sidebar />\r\n        <TicketList />\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 130px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar ticketarea ticketarea\";\r\ngrid-gap: 0;\r\n`;","import React, { useState, useEffect } from 'react'\r\nimport styled from \"styled-components\"\r\n\r\nexport default function Dashboard() {\r\n    const [data, setData] = useState({})\r\n    const [projects, setProjects] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const response = await fetch('/api/v1/dashboard')\r\n            const json = await response.json()\r\n            setData(json.data)\r\n            setProjects(json.data.projects)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div className=\"projects\">\r\n                <p>Top Projects</p>\r\n\r\n                <ul>\r\n                    {projects.map(project => (\r\n                        <li key={project._id}>{project.title}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"dashboardItem\">\r\n                    <p>Number of Tickets</p>\r\n                    <h1>{data.ticketNum}</h1>\r\n                </div>\r\n                <div className=\"dashboardItem\">\r\n                    <p>Bug Tickets</p>\r\n                    <h1>{data.ticketsBug}</h1>\r\n                </div>\r\n                <div className=\"dashboardItem\">\r\n                    <p>Open Tickets</p>\r\n                    <h1>{data.ticketsOpen}</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"dashboardItem\">\r\n                    <p>Tickets In Progress</p>\r\n                    <h1>{data.ticketsInProgress}</h1>\r\n                </div>\r\n                <div className=\"dashboardItem\">\r\n                    <p>Highest Priority Tickets</p>\r\n                    <h1>{data.ticketsHighest}</h1>\r\n                </div>\r\n                <div className=\"dashboardItem\">\r\n                    <p>High Priority Tickets</p>\r\n                    <h1>{data.ticketsHigh}</h1>\r\n                </div>\r\n            </div>\r\n\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\ndisplay: grid;\r\n.projects{\r\n    p{\r\n        font-size: 1.5rem;\r\n        font-weight: bold;\r\n    }\r\n    li {\r\n        padding: .5rem 0;\r\n    }\r\n   \r\n}\r\n\r\n.row {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin: 1rem;\r\n    }\r\n\r\n    .dashboardItem{\r\n        width: 15vw;\r\n        height: 15vh;\r\n        margin: 0 1rem;\r\n        ${'' /* padding: 2rem; */}\r\n        background: green;\r\n        p{\r\n            color: white;\r\n        }\r\n        h1{\r\n            text-align: center;\r\n            color: white;\r\n        }\r\n    }\r\n` ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Sidebar from '../components/Sidebar'\r\nimport Header from '../components/Header';\r\nimport Dashboard from \"../components/Dashboard\"\r\n\r\nexport default function DashboardPage() {\r\n  return (\r\n    <div>\r\n      <Main>\r\n        <Header />\r\n        <Sidebar />\r\n        <Dashboard />\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 150px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar dashboard dashboard\";\r\ngrid-gap: 0;\r\nbackground: white;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Sidebar from '../components/Sidebar';\r\n\r\nexport default function ManageRoles() {\r\n  return (\r\n    <div>\r\n      <Main>\r\n        <Header />\r\n        <Sidebar />\r\n        <h1>ManageRoles</h1>\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 150px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar managerole managerole\";\r\ngrid-gap: 0;\r\nbackground: white;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Sidebar from \"../components/Sidebar\"\r\n\r\nexport default function ManageUsers() {\r\n  return (\r\n    <div>\r\n      <Main>\r\n        <Header />\r\n        <Sidebar />\r\n        <h1>ManageUsers</h1>\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 150px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar manageuser manageuser\";\r\ngrid-gap: 0;\r\nbackground: white;\r\n`;\r\n","import React, { useState } from 'react'\r\nimport ReactDOM from \"react-dom\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\n\r\n\r\nexport default function AddProjectModal(props) {\r\n    let history = useHistory()\r\n    const [state, setState] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n    })\r\n    function handleChange(event) {\r\n        console.log(event.target)\r\n        // console.log(event.target.value)\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n        // event.preventDefault()\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        await fetch(\"api/v1/projects\", {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                title: state.title,\r\n                description: state.description\r\n            })\r\n        })\r\n        history.push(\"/projects\")\r\n        closeModal()\r\n    }\r\n\r\n\r\n    const { closeModal } = props\r\n    const modal = (\r\n        <>\r\n            <Overlay />\r\n            <ModalWrapper >\r\n                <button className=\"closeBtn\" onClick={closeModal}>X</button>\r\n                <h1>Add Project</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        value={state.title}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Title\"\r\n                    />\r\n\r\n                    <input\r\n                        name=\"description\"\r\n                        type=\"text\"\r\n                        value={state.description}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Description\"\r\n                    />\r\n                    <button onClick={handleSubmit} className=\"submitBtn\">Submit</button>\r\n                </form>\r\n\r\n            </ModalWrapper>\r\n        </>\r\n    )\r\n    return ReactDOM.createPortal(modal, document.getElementById(\"portal\"))\r\n}\r\n\r\nconst Overlay = styled.div`\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground-color: rgba(255, 255, 255, .6);\r\n-webkit-backdrop-filter: blur(2px);\r\nbackdrop-filter: blur(2px);\r\n \r\n`\r\nconst ModalWrapper = styled.div` \r\nposition: absolute;\r\ntop: 10%;\r\nleft: 25%;\r\nwidth: 30rem;\r\nheight: 15rem;\r\nbackground:#128DEB;\r\nborder-radius: 10px;\r\n\r\nform{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\nh1 {\r\n    text-align: center;\r\n    padding:  .5rem 0;\r\n    margin-top: .5rem;\r\n    color: white;\r\n}\r\nlabel{\r\n    color: white;\r\n}\r\n\r\ninput[type=text]{\r\n    width: 50%;\r\n    padding: .5rem;\r\n    margin: .25rem;\r\n}\r\n\r\nselect{\r\n    padding: .5rem;\r\n    margin: .25rem;\r\n}\r\n\r\n.submitBtn{\r\n    width: 8rem;\r\n    padding: .5rem;\r\n    margin: .5rem;\r\n    background: #EB7012;\r\n    color: white;\r\n    border-radius: 5px;\r\n}\r\n.closeBtn{\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 15px;\r\n    background:#128DEB;\r\n    color: white;\r\n}\r\n`","import React, { useState, useEffect } from 'react'\r\nimport styled from \"styled-components\"\r\nimport AddProjectModal from \"./AddProjectModal\"\r\n\r\n// TODO : Refresh projects after adding new project\r\nexport default function ProjectsList() {\r\n    const [projects, updateProjects] = useState([])\r\n    const [show, setShow] = useState(false)\r\n    const openModal = () => setShow(true)\r\n    const closeModal = () => setShow(false)\r\n\r\n    useEffect(() => {\r\n        async function fetchProjects() {\r\n            const response = await fetch(\"/api/v1/projects\")\r\n            const json = await response.json()\r\n            updateProjects(json.data)\r\n        }\r\n        fetchProjects()\r\n    }, [projects])\r\n    return (\r\n        <div>\r\n            <TableTitle>\r\n                <h3>Projects</h3>\r\n                <button onClick={openModal}>Add A Project</button>\r\n            </TableTitle>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th># of Tickets</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {projects.map((project) => (\r\n                        <tr>\r\n                            <td>{project.title}</td>\r\n                            <td>{project.description}</td>\r\n                            <td>{project.tickets.length}</td>\r\n                        </tr>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </Table>\r\n            {show && <AddProjectModal closeModal={closeModal} show={show} />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Table = styled.table`\r\ngrid-area: projectarea;\r\nbackground: white;\r\nborder-collapse: collapse;\r\nwidth: calc(100vw - 220px);\r\n\r\nthead th {\r\n    padding: 1rem;\r\n    text-align: left;\r\n    border-bottom: solid 1px #F8F8F8;\r\n    background: #e7f3fd;\r\n}\r\ntd{\r\n  padding: 1rem;\r\n  text-align: left;\r\n  border-bottom: solid 1px #EEE;\r\n}\r\ntr{\r\n    height: 2rem;\r\n}\r\n\r\n`\r\n\r\nconst TableTitle = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding: 1rem 2rem;\r\nh3 {\r\n    padding-top: .25rem; \r\n}\r\nbutton {\r\n      padding: .5rem;\r\n      background: #eb7012;\r\n      color: white;\r\n      border-radius: 5px;\r\n}\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Sidebar from \"../components/Sidebar\"\r\nimport ProjectsList from \"../components/ProjectsList\"\r\n\r\nexport default function Projects() {\r\n  return (\r\n    <div>\r\n      <Main>\r\n        <Header />\r\n        <Sidebar />\r\n        <ProjectsList />\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 150px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar projectarea projectarea\";\r\ngrid-gap: 0;\r\nbackground: white;\r\n`;\r\n","import React, { useState } from 'react'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Login() {\r\n    let history = useHistory()\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n\r\n    })\r\n    function handleChange(event) {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n        event.preventDefault()\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        const response = await fetch(\"/api/v1/users/login\", {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                email: state.email,\r\n                password: state.password\r\n            }),\r\n        })\r\n        if (response.status === 400) {\r\n            const json = await response.json()\r\n            setState({\r\n                error: json.error,\r\n                email: \"\",\r\n                password: \"\"\r\n            })\r\n        }\r\n        if (response.status === 200) {\r\n            const json = await response.json()\r\n            sessionStorage.setItem(\"token\", json.token);\r\n            sessionStorage.setItem(\"firstName\", json.firstName);\r\n            sessionStorage.setItem(\"lastName\", json.lastName);\r\n            history.push(\"/tickets\");\r\n        }\r\n    }\r\n    return (\r\n        <LoginWrapper>\r\n            <LoginForm onSubmit={handleSubmit}>\r\n                <h1>Issue Tracker</h1>\r\n                <h4>{state.error}</h4>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={state.email}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={state.password}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input type=\"submit\" value=\"Submit\" />\r\n                <div className=\"loginLinks\">\r\n                    <p>\r\n                        Don't have an account?<Link to=\"/register\"> Register User</Link>\r\n                    </p>\r\n                    <p>\r\n                        Login as a Demo User <Link to=\"/demo\"> Click Here</Link>\r\n                    </p>\r\n                </div>\r\n            </LoginForm>\r\n        </LoginWrapper>\r\n    )\r\n}\r\n\r\nconst LoginWrapper = styled.div`\r\nbackground:#128DEB;\r\nheight: 100vh;\r\nwidth: 100%;\r\n\r\n`\r\n\r\nconst LoginForm = styled.form`\r\n    position: absolute;\r\n    top: 10%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    left: 0;\r\n    right: 0;\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: white;\r\n    width: 30rem;\r\n    padding: 2rem 0;\r\n \r\n  \r\n  h1{\r\n    text-align: center;\r\n    color: #0d62a4;\r\n    padding-bottom: .5rem;  \r\n  }\r\n\r\n  h4{\r\n      color: red;\r\n  }\r\n  \r\n  input {\r\n    width: 20rem;\r\n    margin: 0.5rem 0;\r\n    padding: 1rem 0;\r\n    text-align: center;\r\n  border: 1px solid black;\r\n  }\r\n  input[type=\"submit\"] {\r\n      margin-top: .75rem;\r\n    width: 5rem;\r\n    background: #eb7012;\r\n    color: white;\r\n  }\r\n  .loginLinks {\r\n      padding: .5rem 0;\r\n  }\r\n  .loginLinks p {\r\n      padding: .25rem 0;\r\n  }\r\n`;\r\n\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router\"\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport default function Login() {\r\n    const history = useHistory()\r\n    const [state, setState] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n\r\n    })\r\n    function handleChange(event) {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n        event.preventDefault()\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n\r\n        event.preventDefault()\r\n        fetch(\"/api/v1/users/add\", {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                firstName: state.firstName,\r\n                lastName: state.lastName,\r\n                email: state.email,\r\n                password: state.password\r\n            })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (Object.prototype.hasOwnProperty.call(data, \"error\")) {\r\n                    setState({\r\n                        error: data.error,\r\n                        firstName: \"\",\r\n                        lastName: \"\",\r\n                        email: \"\",\r\n                        password: \"\"\r\n                    });\r\n\r\n                }\r\n                if (Object.prototype.hasOwnProperty.call(data, \"token\")) {\r\n                    sessionStorage.setItem(\"token\", data.token);\r\n                    sessionStorage.setItem(\"First Name\", data.firstName);\r\n                    sessionStorage.setItem(\"Last Name\", data.lastName);\r\n\r\n                    history.push(\"/tickets\");\r\n                }\r\n            });\r\n    }\r\n    return (\r\n        <LoginWrapper>\r\n            <LoginForm onSubmit={handleSubmit}>\r\n                <h1>Delivery Notes</h1>\r\n                <h4>{state.error}</h4>\r\n                <input\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    value={state.firstName}\r\n                    onChange={handleChange}\r\n                />\r\n                <input\r\n                    name=\"lastName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    value={state.lastName}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={state.email}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={state.password}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input type=\"submit\" value=\"Submit\" onClick={handleSubmit} />\r\n\r\n            </LoginForm>\r\n        </LoginWrapper>\r\n    )\r\n}\r\n\r\nconst LoginWrapper = styled.div`\r\nbackground:#128DEB;\r\nheight: 100vh;\r\nwidth: 100%;\r\n\r\n`\r\n\r\nconst LoginForm = styled.form`\r\n    position: absolute;\r\n    top: 10%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    left: 0;\r\n    right: 0;\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: white;\r\n    width: 30rem;\r\n    padding: 2rem 0;\r\n    border-radius: 10px;\r\n  \r\n  h1{\r\n    text-align: center;\r\n    color: #0d62a4;\r\n    padding-bottom: .5rem;  \r\n  }\r\n\r\n  h4{\r\n      color: red;\r\n  }\r\n  \r\n  input {\r\n    width: 20rem;\r\n    margin: 0.5rem 0;\r\n    padding: 1rem 0;\r\n    text-align: center;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n  input[type=\"submit\"] {\r\n      margin-top: .75rem;\r\n    width: 5rem;\r\n    background: #eb7012;\r\n    color: white;\r\n  }\r\n \r\n`;\r\n\r\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport GlobalStyle from './styles/global';\nimport Tickets from './pages/Tickets';\nimport Dashboard from './pages/Dashboard';\nimport ManageRoles from './pages/ManageRoles';\nimport ManageUsers from './pages/ManageUsers';\nimport Projects from './pages/Projects';\nimport Login from \"./pages/Login\"\nimport Register from \"./pages/Register\"\n\nfunction App() {\n  return (\n    <div>\n      <GlobalStyle />\n      <HashRouter>\n        <Switch>\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/manageroles\" component={ManageRoles} />\n          <Route path=\"/manageusers\" component={ManageUsers} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/tickets\" component={Tickets} />\n          <Route path=\"/register\" component={Register} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}