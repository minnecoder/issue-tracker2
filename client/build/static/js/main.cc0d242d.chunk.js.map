{"version":3,"sources":["styles/global.js","components/Header.js","components/Sidebar.js","helpers/DateDiff.js","components/TicketNotes.js","components/TicketDetails.js","components/TicketList.js","pages/Tickets.js","components/Dashboard.js","pages/Dashboard.js","pages/ManageRoles.js","pages/ManageUsers.js","components/ProjectsList.js","pages/Projects.js","pages/Login.js","pages/Register.js","components/CreateTicketComponent.js","pages/CreateTicket.js","components/AddProjectComponent.js","pages/CreateProject.js","components/ProjectTicketList.js","pages/ProjectTicket.js","App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Header","history","useHistory","Main","Nav","Left","Right","className","style","paddingTop","onClick","sessionStorage","clear","push","styled","div","ul","Sidebar","SidebarLink","to","Link","DateDiff","oldDate","date1","Date","getTime","date2","minutes","Math","floor","hours","days","months","years","TicketNotes","data","notes","i","ticketComment","length","ticketHistory","sort","a","b","created","map","note","TicketComment","user","comment","_id","TicketChange","propertyChanged","oldValue","newValue","TicketDetails","index","useState","isEdited","setIsEdited","ticketPriority","ticketType","ticketStatus","state","setState","handleChange","event","target","name","value","preventDefault","arr","firstName","getItem","lastName","fullName","property","fetch","method","mode","headers","body","JSON","stringify","id","window","location","reload","Wrapper","title","marginTop","assignedDev","submitter","onChange","description","cols","rows","type","TicketList","tickets","updateTickets","ticketIndex","updateticketIndex","useEffect","response","json","fetchTickets","dateConverter","dateTime","date","substr","split","splice","join","TableTitle","Table","ticket","createdOn","table","Tickets","Dashboard","setData","projects","setProjects","fetchData","project","ticketNum","ticketsBug","ticketsOpen","ticketsInProgress","ticketsHighest","ticketsHigh","DashboardPage","ManageRoles","ManageUsers","ProjectsList","abortController","AbortController","updateProjects","signal","fetchProjects","abort","pathname","Projects","Login","email","password","error","status","setItem","token","LoginWrapper","LoginForm","onSubmit","placeholder","form","handleSubmit","then","res","Object","prototype","hasOwnProperty","call","CreateTicket","unshift","AddProjectComponent","ProjectTicketList","passedData","App","path","exact","component","CreateProject","ProjectTicket","Register","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.cc0d242d.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0; \r\n    border: 0;\r\n    box-sizing: border-box;\r\n  }  \r\n  \r\n  *:focus {\r\n    outline: 0;\r\n  }  \r\n  \r\n  html, body, #root {\r\n    height: 100%;\r\n  }  \r\n  \r\n  body {\r\n    -webkit-font-smoothing: antialiased;\r\n  }  \r\n  \r\n  body, input, button {\r\n    font: 14px 'Roboto', sans-serif;\r\n  }  \r\n  \r\n  a {\r\n    text-decoration: none;\r\n  }  \r\n  \r\n  ul {\r\n    list-style: none;\r\n  }  \r\n  \r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styled from 'styled-components';\r\nimport { FaChevronDown } from 'react-icons/fa';\r\n\r\nexport default function Header() {\r\n  let history = useHistory()\r\n  function logout() {\r\n    sessionStorage.clear()\r\n    history.push(\"/\")\r\n  }\r\n  return (\r\n    <Main>\r\n      <Nav>\r\n        <Left>\r\n          <h3>Issue Tracker</h3>\r\n        </Left>\r\n        <Right>\r\n          {/* <SearchBar>\r\n            <FaSearch style={{ paddingRight: '.25rem' }} />\r\n            <input type=\"search\" name=\"search\" id=\"search\" placeholder=\"Search...\" />\r\n          </SearchBar>\r\n          <li>Notifications</li> */}\r\n          <div className=\"dropdown\">\r\n            <button className=\"dropbtn\">Users\r\n            <FaChevronDown style={{ paddingTop: '.35rem' }} />\r\n            </button>\r\n            <div className=\"dropdown-content\">\r\n              <button onClick={() => logout()}>Log Out</button>\r\n            </div>\r\n          </div>\r\n        </Right>\r\n      </Nav>\r\n    </Main>\r\n  );\r\n}\r\n\r\nconst Main = styled.div`\r\ngrid-area: header;\r\nheight: 65px;\r\nbackground: #128DEB;\r\n`;\r\n\r\nconst Nav = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding-top: 1rem;\r\n`;\r\n\r\nconst Left = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n\r\nh3{\r\n  padding: 0 2rem;\r\n  color: white;\r\n  font-size: 2rem;\r\n  @media (max-width: 800px) {\r\n    padding-top: .5rem;\r\n    font-size: 1rem;\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst Right = styled.ul`\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-right: 6rem;\r\n\r\nli {\r\n  padding: 0 1rem;\r\n  color: white;\r\n}\r\n.dropdown{\r\n \r\n}\r\n.dropbtn {\r\n  background: #128DEB;\r\n  color: white;\r\n}\r\n.dropdown:hover .dropdown-content{\r\n  display: block;\r\n}\r\n.dropdown-content {\r\n  background: #A0D1F7;\r\n  display: none;\r\n  position: absolute;\r\n  min-width: 120px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  z-index: 1;\r\n}\r\n.dropdown-content button {\r\n  background: #A0D1F7;\r\n  float: none;\r\n  color: black;\r\n  padding: 12px 16px;\r\n  text-decoration: none;\r\n  display: block;\r\n  text-align: left;\r\n}\r\n`;\r\n\r\n// const SearchBar = styled.div`\r\n// margin-left: 2rem;\r\n// display: inline-flex;\r\n// background: #128DEB;\r\n// overflow: hidden;\r\n// color: white;\r\n// input {\r\n//   border-style:hidden;\r\n//   background: #128DEB;\r\n//   width: 15rem;\r\n//   color: white;\r\n// }\r\n// input: focus {\r\n//   outline: none;\r\n// }\r\n// `;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <Main>\r\n            <ul>\r\n                <li><SidebarLink to=\"/dashboard\">Dashboard</SidebarLink></li>\r\n                <li><SidebarLink to=\"/projects\">Projects</SidebarLink></li>\r\n                <li><SidebarLink to=\"/tickets\">My Tickets</SidebarLink></li>\r\n                {/* <li><SidebarLink to=\"/manageroles\">Manage Roles</SidebarLink></li>\r\n                <li><SidebarLink to=\"/manageusers\">Manage Users</SidebarLink></li> */}\r\n            </ul>\r\n        </Main>\r\n    );\r\n}\r\n\r\nconst Main = styled.div`\r\ngrid-area: sidebar;\r\nheight: calc(100vh - 65px);\r\nwidth: 130px;\r\nbackground: #a0d1f7;\r\nborder-right: solid 1px #ddd;\r\nul {\r\n    margin-left: 1rem;\r\n   height: 100%\r\n}\r\nli {\r\npadding: 1rem 0;\r\njustify-content: space-between;\r\n}\r\n@media (max-width: 800px) {\r\n    height: 3rem;\r\n    width: 100%;\r\n    ul {\r\n        display: flex;\r\n        justify-content: space-around;\r\n    }\r\n    li {\r\npadding: 1rem 0;\r\n\r\n}\r\n}\r\n`;\r\n\r\nconst SidebarLink = styled(Link)`\r\ncolor: white;\r\nfont-weight:600;\r\n`;","export default function DateDiff(oldDate) {\r\n    const date1 = new Date(oldDate).getTime();\r\n    const date2 = new Date();\r\n\r\n    // return minutes if less than 60\r\n    let minutes = Math.floor((date2 - date1) / 60000)\r\n    if (minutes < 60) {\r\n        return `${minutes} minutes ago`\r\n    }\r\n    // return hours if less than 24\r\n    let hours = Math.floor((date2 - date1) / (60000 * 60));\r\n    if (hours < 24) {\r\n        return `${hours} hours ago`\r\n    }\r\n    // returndays if less than 30\r\n    let days = Math.floor((date2 - date1) / (60000 * 60 * 24))\r\n    if (days < 30) {\r\n        return `${days} days ago`\r\n    }\r\n    // return months if less than 12\r\n    let months = Math.floor((date2 - date1) / (60000 * 60 * 24 * 30))\r\n    if (months < 12) {\r\n        return `${months} months ago`\r\n    }\r\n    // return years\r\n    let years = Math.floor((date2 - date1) / (60000 * 60 * 24 * 30 * 12))\r\n    return `${years} years ago`\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport DateDiff from \"../helpers/DateDiff\"\r\n\r\nexport default function TicketNotes(data) {\r\n  const notes = []\r\n  for (let i = 0; i < data.data.ticketComment.length; i++) {\r\n    notes.push(data.data.ticketComment[i])\r\n  }\r\n  for (let i = 0; i < data.data.ticketHistory.length; i++) {\r\n    notes.push(data.data.ticketHistory[i])\r\n  }\r\n  notes.sort((a, b) => {\r\n    let da = new Date(a.created)\r\n    let db = new Date(b.created)\r\n    return da - db\r\n  })\r\n\r\n\r\n  return (\r\n    <div>\r\n      {notes\r\n        .map((note => {\r\n          if ('comment' in note) {\r\n            return (\r\n              <TicketComment key={note._id}>\r\n                <div>\r\n                  {note.user}\r\n                  {' '}\r\n                  commented\r\n                  {' '}\r\n                  <span>\r\n\r\n                    {DateDiff(\r\n                      note.created\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <p>\r\n                  {note.comment}\r\n                </p>\r\n              </TicketComment>\r\n            );\r\n          }\r\n          if ('oldValue' in note) {\r\n            return (\r\n              <TicketChange key={note._id}>\r\n                <p>\r\n                  {note.user}\r\n                  {' '}\r\n                  changed\r\n                  {' '}\r\n                  {note.propertyChanged}\r\n                  {' '}\r\n                  from\r\n                  {' '}\r\n                  {note.oldValue}\r\n                  {' '}\r\n                  to\r\n                  {' '}\r\n                  {note.newValue}\r\n                  <span>\r\n                    {DateDiff(\r\n                      note.created,\r\n                    )}\r\n                  </span>\r\n                </p>\r\n\r\n              </TicketChange>\r\n            );\r\n          }\r\n          return null;\r\n        }))}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst TicketChange = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nbackground: #E7F3FD;\r\nmargin: .5rem;\r\npadding: .5rem;\r\n\r\nspan {\r\n  padding-top: .25rem;\r\n  padding-left: .25rem;\r\n    font-size: 12px;\r\n    color: #B2B9BE; \r\n}\r\n`;\r\n\r\nconst TicketComment = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\npadding: .5rem;\r\n\r\ndiv {\r\n   \r\n    padding: .5rem;\r\n    background: #E7F3FD;\r\n}\r\nspan {\r\n  padding-top: .25rem;\r\n    font-size: 12px;\r\n    color: #B2B9BE; \r\n}\r\np {\r\n    margin-top: .25rem;\r\n    padding: .75rem;\r\n    border-left: solid 1px #ccc;\r\n}\r\n`;\r\n","import React, { useState } from 'react'\r\nimport TicketNotes from \"./TicketNotes\"\r\nimport styled from \"styled-components\"\r\nimport { FaEdit } from 'react-icons/fa';\r\n\r\nexport default function TicketDetails({ data, index }) {\r\n  const [isEdited, setIsEdited] = useState(false)\r\n  const [state, setState] = useState({\r\n    ticketPriority: \"\",\r\n    ticketType: \"\",\r\n    ticketStatus: \"\",\r\n    ticketComment: \"\"\r\n  })\r\n\r\n  function handleChange(event) {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault()\r\n    const arr = []\r\n    const firstName = sessionStorage.getItem(\"firstName\")\r\n    const lastName = sessionStorage.getItem(\"lastName\")\r\n    const fullName = `${firstName} ${lastName}`\r\n    // verify if each input is different\r\n    // if an input is different add object of data to an array\r\n    if (data.ticketType !== state.ticketType && state.ticketType !== \"\") {\r\n      arr.push({\r\n        user: fullName,\r\n        propertyChanged: \"Ticket Type\",\r\n        property: \"ticketType\",\r\n        oldValue: data.ticketType,\r\n        newValue: state.ticketType\r\n      })\r\n    }\r\n    if (data.ticketStatus !== state.ticketStatus && state.ticketStatus !== \"\") {\r\n      arr.push({\r\n        user: fullName,\r\n        propertyChanged: \"Ticket Status\",\r\n        property: \"ticketStatus\",\r\n        oldValue: data.ticketStatus,\r\n        newValue: state.ticketStatus\r\n      })\r\n    }\r\n    if (data.ticketPriority !== state.ticketPriority && state.ticketPriority !== \"\") {\r\n      arr.push({\r\n        user: fullName,\r\n        propertyChanged: \"Ticket Priority\",\r\n        property: \"ticketPriority\",\r\n        oldValue: data.ticketPriority,\r\n        newValue: state.ticketPriority\r\n      })\r\n    }\r\n    // iterate through array of objects and send each item to API end point\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (sessionStorage.getItem(\"demo\") !== null) {\r\n        await fetch(\"/api/v1/tickethistory\", {\r\n          method: \"PUT\",\r\n          mode: \"cors\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            id: data._id,\r\n            user: arr[i].user,\r\n            propertyChanged: arr[i].propertyChanged,\r\n            property: arr[i].property,\r\n            oldValue: arr[i].oldValue,\r\n            newValue: arr[i].newValue\r\n          })\r\n        })\r\n      }\r\n\r\n    }\r\n    // after complettion set isEdited to false\r\n    setIsEdited(false)\r\n    window.location.reload()\r\n\r\n  }\r\n\r\n  async function submitComment() {\r\n    const firstName = sessionStorage.getItem(\"firstName\")\r\n    const lastName = sessionStorage.getItem(\"lastName\")\r\n    const fullName = `${firstName} ${lastName}`\r\n    await fetch(\"/api/v1/ticketcomment\", {\r\n      method: \"PUT\",\r\n      mode: \"cors\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: data._id,\r\n        user: fullName,\r\n        comment: state.ticketComment\r\n      })\r\n    })\r\n    setState({ ticketComment: \"\" })\r\n    window.location.reload()\r\n  }\r\n\r\n  function toggleEdited() {\r\n    if (isEdited) {\r\n      setIsEdited(false)\r\n    } else {\r\n      setIsEdited(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"ticketInfo\" key={index}>\r\n        <div className=\"ticketTitle\">\r\n          <h2>{data.title}</h2>\r\n          <span onClick={toggleEdited}>\r\n            <FaEdit style={{ marginTop: \".25rem\" }} />\r\n          Edit\r\n          </span>\r\n        </div>\r\n        <div className=\"info\">\r\n          <div>\r\n            <section className=\"infoItem\">\r\n              <p>Assigned To</p>\r\n              <p>{data.assignedDev}</p>\r\n            </section>\r\n            <section className=\"infoItem\">\r\n              <p>Created By</p>\r\n              <p>{data.submitter}</p>\r\n            </section>\r\n          </div>\r\n\r\n          {isEdited ?\r\n            <div className=\"edit-ticket\">\r\n              <section className=\"infoItem\">\r\n                <p>Type</p>\r\n                <select\r\n                  name=\"ticketType\"\r\n                  value={state.ticketType}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">-</option>\r\n                  <option value=\"Bug\">Bug</option>\r\n                  <option value=\"New Feature\">New Feature</option>\r\n                  <option value=\"Improvement\">Improvement</option>\r\n                  <option value=\"Task\">Task</option>\r\n                  <option value=\"Testing\">Testing</option>\r\n                </select>\r\n              </section>\r\n              <section className=\"infoItem\">\r\n                <p>Status</p>\r\n                <select\r\n                  name=\"ticketStatus\"\r\n                  value={state.ticketStatus}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">-</option>\r\n                  <option value=\"Open\">Open</option>\r\n                  <option value=\"Resolved\">Resolved</option>\r\n                  <option value=\"Closed\">Closed</option>\r\n                  <option value=\"Reopened\">Reopened</option>\r\n                  <option value=\"In Progress\">In Progress</option>\r\n                </select>\r\n              </section>\r\n              <section className=\"infoItem\">\r\n                <p>Priority</p>\r\n                <select\r\n                  name=\"ticketPriority\"\r\n                  value={state.ticketPriority}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\">-</option>\r\n                  <option value=\"Lowest\">Lowest</option>\r\n                  <option value=\"Low\">Low</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"High\">High</option>\r\n                  <option value=\"Highest\">Highest</option>\r\n                </select>\r\n              </section>\r\n              <button onClick={handleSubmit} className=\"submitBtn\">Submit</button>\r\n            </div>\r\n            :\r\n            <div>\r\n              <section className=\"infoItem\">\r\n                <p>Type</p>\r\n                <p>{data.ticketType}</p>\r\n              </section>\r\n              <section className=\"infoItem\">\r\n                <p>Status</p>\r\n                <p>{data.ticketStatus}</p>\r\n              </section>\r\n              <section className=\"infoItem\">\r\n                <p>Priority</p>\r\n                <p>{data.ticketPriority}</p>\r\n              </section>\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <p className=\"description\">{data.description}</p>\r\n      </div >\r\n      <TicketNotes data={data} />\r\n      <div className=\"ticketComment\">\r\n        <textarea name=\"ticketComment\" value={state.ticketComment} onChange={handleChange} cols=\"30\" rows=\"10\" />\r\n        <button onClick={submitComment} type=\"submit\">Submit</button>\r\n      </div>\r\n    </Wrapper>)\r\n}\r\n\r\n\r\n\r\nconst Wrapper = styled.div`\r\nbackground: white;\r\nborder-left: 1px solid #ccc;\r\n\r\n.ticketTitle {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-top: .5rem;\r\n  h2{\r\n    margin-left: .25rem;\r\n  }\r\n  span{\r\n    cursor: pointer;\r\n    margin-right: 2rem; \r\n    padding: .5rem;\r\n    color: white;\r\n    background: #EB7012;\r\n    border-radius: 5px;\r\n  }\r\n}\r\n\r\n.description{\r\n  padding-top: .5rem;\r\n}\r\n .infoItem{\r\n  padding: .5rem;\r\n\r\n  \r\n p:nth-child(1) {\r\n   text-transform: uppercase;\r\n   color: #ABB1B6;\r\n   font-weight: 500;\r\n   padding-bottom: .25rem;\r\n }\r\n}\r\n.info{\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: space-between;\r\n  border-bottom: solid 1px #ddd;\r\n  margin: 0 1rem;\r\n  div{\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  select{\r\n    border: 1px solid black;\r\n  }\r\n  .submitBtn{\r\n    width: 8rem;\r\n    padding: .5rem;\r\n    margin: .5rem;\r\n    background: #EB7012;\r\n    color: white;\r\n    border-radius: 5px;\r\n}\r\n}\r\n.ticketInfo{\r\n  margin: .5rem;\r\n  h2{\r\n  padding: 0.5rem 0;\r\n  }\r\n}\r\n\r\n.ticketComment {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 40rem;\r\n  margin: 0 1rem ;\r\n@media (max-width: 800px) {\r\n  width: 20rem;\r\n}\r\ninput[type=text] {\r\n  \r\n  height: 5rem;\r\n  border: solid 1px black;\r\n}\r\n\r\ntextarea {\r\n  border: solid 1px black;\r\n}\r\n\r\nbutton {\r\n  margin-top: .5rem;\r\n  padding: .5rem;\r\n  width: 6rem;\r\n  background: #EB7012;\r\n  color: white;\r\n  border-radius: 5px;\r\n}\r\n.edit-ticket {\r\n  @media (max-width: 800px) {\r\n    width: 200px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n}\r\n.edit-ticket section {\r\n    ${'' /* display: flex;\r\n    flex-direction: column; */}\r\n    background: red;\r\n\r\n  }\r\n}\r\n`","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport TicketDetails from \"./TicketDetails\"\r\n\r\n\r\nexport default function TicketList() {\r\n    let history = useHistory()\r\n    const firstName = sessionStorage.getItem(\"firstName\")\r\n    const lastName = sessionStorage.getItem(\"lastName\")\r\n    const fullName = `${firstName} ${lastName}`\r\n\r\n\r\n    const [tickets, updateTickets] = useState([])\r\n    const [ticketIndex, updateticketIndex] = useState(\"0\")\r\n\r\n    useEffect(() => {\r\n        async function fetchTickets() {\r\n            const firstName = sessionStorage.getItem(\"firstName\")\r\n            const lastName = sessionStorage.getItem(\"lastName\")\r\n            const fullName = `${firstName} ${lastName}`\r\n            const response = await fetch(`/api/v1/tickets/name/${fullName}`)\r\n            const json = await response.json()\r\n            updateTickets(json.data)\r\n        }\r\n        fetchTickets()\r\n    }, [])\r\n\r\n    const dateConverter = (dateTime) => {\r\n        const date = dateTime.substr(0, 10).split(\"-\")\r\n        date.push(date.splice(0, 1)[0])\r\n        return date.join(\"/\")\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            < div >\r\n                <TableTitle>\r\n                    <h3>Tickets for {fullName}</h3>\r\n                    <button onClick={() => { history.push(\"/createtickets\") }}>Create A Ticket</button>\r\n                </TableTitle>\r\n\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Created</th>\r\n                            <th>Assigned Developer</th>\r\n                            <th>Ticket Priority</th>\r\n                            <th>Ticket Status</th>\r\n                            <th>Ticket Type</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tickets.map((ticket, index) => (\r\n                            <tr key={index} onClick={() => updateticketIndex(index)}>\r\n                                <td>{ticket.title}</td>\r\n                                <td>{dateConverter(ticket.createdOn)}</td>\r\n                                <td>{ticket.assignedDev}</td>\r\n                                <td>{ticket.ticketPriority}</td>\r\n                                <td>{ticket.ticketStatus}</td>\r\n                                <td>{ticket.ticketType}</td>\r\n                            </tr>\r\n                        ))}\r\n\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </div>\r\n            { !!tickets.length && <TicketDetails key={tickets._id} data={tickets[ticketIndex]} />}\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nconst Wrapper = styled.div` \r\ndisplay: flex;\r\nflex: 1;\r\njustify-content: space-between;\r\nbackground: white;\r\ngrid-area: ticketarea;\r\nheight: calc(100vh - 4.25rem);\r\noverflow-y: scroll;\r\n\r\n@media only screen and  (max-width: 800px){\r\n    flex-direction: column;\r\n    table, thead, tbody, th, td, tr {\r\n    display: block;\r\n  }\r\n  thead tr {\r\n    position: absolute;\r\n    top: -9999px;\r\n    left: -9999px;\r\n  }\r\n  tr { border: 1px solid #ccc; }\r\n  td {\r\n    border: none;\r\n    border-bottom: 1px solid #eee;\r\n    position: relative;\r\n    padding-left: 200px;\r\n    margin-left: 150px;\r\n  }\r\n  td:before {\r\n    position: absolute;\r\n    top: 12px;\r\n    left: 6px;\r\n    width: 200px;\r\n    padding-right: 40px;\r\n    white-space: nowrap;\r\n    margin-left: -150px;\r\n  }\r\n  td:nth-of-type(1):before { content: \"Title\"; }\r\n  td:nth-of-type(2):before { content: \"Created\"; }\r\n  td:nth-of-type(3):before { content: \"Assigned Developer\"; }\r\n  td:nth-of-type(4):before { content: \"Ticket Priority\";}\r\n  td:nth-of-type(5):before {content: \"Ticket Status\"}\r\n  td:nth-of-type(6):before {content: \"Ticket Type\"}\r\n}\r\n\r\n`\r\n\r\nconst Table = styled.table`\r\nwidth: 100%;\r\nborder-collapse: collapse;\r\n\r\nthead th {\r\n    padding: 0.5rem;\r\n    text-align: left;\r\n    background: #e7f3fd;\r\n\r\n}\r\n\r\ntd{\r\n  padding: 0.5rem;\r\n  text-align: left;\r\n  border-bottom: solid 1px #EEE;\r\n\r\n}\r\n\r\ntr{\r\n  ${'' /* height: 2rem; */}\r\n}\r\ntbody tr {\r\n    cursor: pointer;\r\n}\r\n`\r\n\r\nconst TableTitle = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding: 1rem 1rem;\r\n\r\nh3 {\r\n    padding-top: .25rem; \r\n}\r\nbutton {\r\n      padding: .5rem;\r\n      background: #eb7012;\r\n      color: white;\r\n      border-radius: 5px;\r\n}\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Sidebar from '../components/Sidebar';\r\nimport TicketList from '../components/TicketList';\r\n\r\nexport default function Tickets() {\r\n  return (\r\n    <div>\r\n      <Main>\r\n        <Header />\r\n        <Sidebar />\r\n        <TicketList />\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 130px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar ticketarea ticketarea\";\r\ngrid-gap: 0;\r\n\r\n@media (max-width: 800px) {\r\n  display: grid;\r\n grid-template-columns: 1fr;\r\n grid-template-rows: 1fr;\r\n grid-template-areas:\r\n\"header\"\r\n\"sidebar\"\r\n\"ticketarea\";\r\n}\r\n\r\n`;","import React, { useState, useEffect } from 'react'\r\nimport styled from \"styled-components\"\r\n\r\nexport default function Dashboard() {\r\n    const [data, setData] = useState({})\r\n    const [projects, setProjects] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const response = await fetch('/api/v1/dashboard')\r\n            const json = await response.json()\r\n            setData(json.data)\r\n            setProjects(json.data.projects)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div className=\"projects\">\r\n                <p>Top 10 Projects</p>\r\n\r\n                <ul>\r\n                    {projects.map(project => (\r\n                        <li key={project._id}>{project.title}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"row1\">\r\n                <div className=\"dashboardItem\">\r\n                    <p>Number of Tickets</p>\r\n                    <h1>{data.ticketNum}</h1>\r\n                </div>\r\n                <div className=\"dashboardItem\">\r\n                    <p>Bug Tickets</p>\r\n                    <h1>{data.ticketsBug}</h1>\r\n                </div>\r\n                <div className=\"dashboardItem\">\r\n                    <p>Open Tickets</p>\r\n                    <h1>{data.ticketsOpen}</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row2\">\r\n                <div className=\"dashboardItem\">\r\n                    <p>Tickets In Progress</p>\r\n                    <h1>{data.ticketsInProgress}</h1>\r\n                </div>\r\n                <div className=\"dashboardItem\">\r\n                    <p>Highest Priority Tickets</p>\r\n                    <h1>{data.ticketsHighest}</h1>\r\n                </div>\r\n                <div className=\"dashboardItem\">\r\n                    <p>High Priority Tickets</p>\r\n                    <h1>{data.ticketsHigh}</h1>\r\n                </div>\r\n            </div>\r\n\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    grid-template-areas: \r\n    \"projects row1\"\r\n    \"projects row2\";\r\n    width:90%;\r\n\r\n   \r\n\r\n.projects{\r\n    grid-area: projects;\r\n    width: 20vw;\r\n    margin: 2rem 0.5rem 2rem 1.5rem;\r\n    border-radius: 10px;\r\n    background: #128DEB;\r\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n\r\n    @media (max-width: 800px) {\r\n         width: 90%;\r\n        }\r\n\r\n    p{\r\n        font-size: 2rem;\r\n        font-weight: bold;\r\n        text-align: center;\r\n        padding: 1rem 0;\r\n        color: white;\r\n    }\r\n    li {\r\n        color: white;\r\n        padding: 1rem 0;\r\n        text-align: center;\r\n        font-size: 1rem;\r\n    }\r\n   \r\n}\r\n\r\n.row1 {\r\n    grid-area: row1;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 5rem 1rem 1rem 1rem;\r\n    width: 90%;\r\n    @media (max-width: 800px) {\r\n     flex-direction: column;\r\n     margin: 1rem;  \r\n    }\r\n    }\r\n\r\n    \r\n.row2 {\r\n    grid-area: row2;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 1rem;\r\n    width: 90%;\r\n    @media (max-width: 800px) {\r\n     flex-direction: column;\r\n    }\r\n}\r\n\r\n.dashboardItem{\r\n    width: 22vw;\r\n    height: 26vh;\r\n    margin: 0 1rem;\r\n    background: #128DEB;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n\r\n@media (max-width:800px) {\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 1rem 0;\r\n}\r\n\r\n    p{\r\n        color: white;\r\n        font-size: 1.5rem;\r\n        text-align: center;\r\n        padding-top: 1rem;\r\n        @media (max-width: 800px) {\r\n            font-size: 1rem;\r\n            padding: 0;\r\n        }\r\n    }\r\n    h1{\r\n        text-align: center;\r\n        color: white;\r\n        font-size: 6rem;\r\n        padding-top: 1rem;\r\n        @media (max-width: 800px) {\r\n            font-size: 1rem;\r\n            padding: 0;\r\n        }\r\n    }\r\n}\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Sidebar from '../components/Sidebar'\r\nimport Header from '../components/Header';\r\nimport Dashboard from \"../components/Dashboard\"\r\n\r\nexport default function DashboardPage() {\r\n  return (\r\n    <div>\r\n      <Main>\r\n        <Header />\r\n        <Sidebar />\r\n        <Dashboard />\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 150px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar dashboard dashboard\";\r\ngrid-gap: 0;\r\nbackground: white;\r\n\r\n@media (max-width: 800px) {\r\n grid-template-columns: 1fr;\r\n grid-template-areas:\r\n\"header\"\r\n\"sidebar\"\r\n\"dashboard\";\r\n}\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Sidebar from '../components/Sidebar';\r\n\r\nexport default function ManageRoles() {\r\n  return (\r\n    <div>\r\n      <Main>\r\n        <Header />\r\n        <Sidebar />\r\n        <h1>ManageRoles</h1>\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 150px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar managerole managerole\";\r\ngrid-gap: 0;\r\nbackground: white;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Sidebar from \"../components/Sidebar\"\r\n\r\nexport default function ManageUsers() {\r\n  return (\r\n    <div>\r\n      <Main>\r\n        <Header />\r\n        <Sidebar />\r\n        <h1>ManageUsers</h1>\r\n      </Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 150px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar manageuser manageuser\";\r\ngrid-gap: 0;\r\nbackground: white;\r\n`;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\n\r\nexport default function ProjectsList() {\r\n    let abortController = new AbortController()\r\n    let history = useHistory()\r\n    const [projects, updateProjects] = useState([])\r\n\r\n    async function fetchProjects() {\r\n\r\n        const response = await fetch(\"/api/v1/projects\", { signal: abortController.signal })\r\n        const json = await response.json()\r\n        updateProjects(json.data)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        // let isMounted = true\r\n        fetchProjects()\r\n        return () => {\r\n            abortController.abort()\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <TableTitle>\r\n                <h3>Projects</h3>\r\n                <button onClick={() => history.push(\"/addproject\")}>Add A Project</button>\r\n            </TableTitle>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th># of Tickets</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {projects.map((project) => (\r\n                        <tr key={project.title} onClick={() => history.push({\r\n                            pathname: \"/projectticket\",\r\n                            state: { data: project }\r\n                        })\r\n                        }>\r\n                            <td>{project.title}</td>\r\n                            <td>{project.description}</td>\r\n                            <td>{project.tickets.length}</td>\r\n                        </tr>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </Table>\r\n        </div>)\r\n}\r\n\r\n\r\nconst Table = styled.table`\r\ngrid-area: projectarea;\r\nbackground: white;\r\nborder-collapse: collapse;\r\nwidth: calc(100vw - 220px);\r\n\r\n@media (max-width: 800px) {\r\n    width: 100vw;\r\n}\r\n\r\nthead th {\r\n    padding: 1rem;\r\n    text-align: left;\r\n    border-bottom: solid 1px #F8F8F8;\r\n    background: #e7f3fd;\r\n}\r\ntd{\r\n  padding: 1rem;\r\n  text-align: left;\r\n  border-bottom: solid 1px #EEE;\r\n}\r\ntr{\r\n    height: 2rem;\r\n    cursor: pointer;\r\n}\r\n\r\n`\r\n\r\nconst TableTitle = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding: 1rem 2rem;\r\nh3 {\r\n    padding-top: .25rem; \r\n}\r\nbutton {\r\n      padding: .5rem;\r\n      background: #eb7012;\r\n      color: white;\r\n      border-radius: 5px;\r\n}\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Sidebar from \"../components/Sidebar\"\r\nimport ProjectsList from \"../components/ProjectsList\"\r\n\r\nexport default function Projects() {\r\n  return (\r\n    <Main>\r\n      <Header />\r\n      <Sidebar />\r\n      <ProjectsList />\r\n    </Main>\r\n  );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 150px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar projectarea projectarea\";\r\ngrid-gap: 0;\r\nbackground: white;\r\n\r\n@media (max-width: 800px) {\r\n grid-template-columns: 1fr;\r\n grid-template-areas:\r\n\"header\"\r\n\"sidebar\"\r\n\"projectarea\";\r\n}\r\n\r\n`;\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Login() {\r\n    let history = useHistory()\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n\r\n    })\r\n    function handleChange(event) {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n        event.preventDefault()\r\n    }\r\n\r\n    function demoLogin() {\r\n        sessionStorage.setItem(\"firstName\", \"Demo\")\r\n        sessionStorage.setItem(\"lastName\", \"User\")\r\n        sessionStorage.setItem(\"demo\", \"true\")\r\n        history.push(\"/tickets\")\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        const response = await fetch(\"/api/v1/users/login\", {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                email: state.email,\r\n                password: state.password\r\n            }),\r\n        })\r\n        if (response.status === 400) {\r\n            const json = await response.json()\r\n            setState({\r\n                error: json.error,\r\n                email: \"\",\r\n                password: \"\"\r\n            })\r\n        }\r\n        if (response.status === 200) {\r\n            const json = await response.json()\r\n            sessionStorage.setItem(\"token\", json.token);\r\n            sessionStorage.setItem(\"firstName\", json.firstName);\r\n            sessionStorage.setItem(\"lastName\", json.lastName);\r\n            history.push(\"/tickets\");\r\n        }\r\n    }\r\n    return (\r\n        <LoginWrapper>\r\n            <LoginForm onSubmit={handleSubmit}>\r\n                <h1>Issue Tracker</h1>\r\n                <h4>{state.error}</h4>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={state.email}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={state.password}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input type=\"submit\" value=\"Submit\" />\r\n                <div className=\"loginLinks\">\r\n                    <button onClick={() => { history.push(\"/register\") }}>\r\n                        Register User\r\n                    </button>\r\n                    <button onClick={() => demoLogin()}>\r\n                        Login as a Demo User\r\n                    </button>\r\n                </div>\r\n            </LoginForm>\r\n        </LoginWrapper>\r\n    )\r\n}\r\n\r\nconst LoginWrapper = styled.div`\r\nbackground:#128DEB;\r\nheight: 100vh;\r\nwidth: 100%;\r\n\r\n`\r\n\r\nconst LoginForm = styled.form`\r\n    position: absolute;\r\n    top: 10%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    left: 0;\r\n    right: 0;\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: white;\r\n    width: 30rem;\r\n    padding: 2rem 0;\r\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n    border-radius: 5px;\r\n  \r\n  h1{\r\n    text-align: center;\r\n    color: #0d62a4;\r\n    padding-bottom: .5rem;  \r\n  }\r\n\r\n  h4{\r\n      color: red;\r\n  }\r\n  \r\n  input {\r\n    width: 20rem;\r\n    margin: 0.5rem 0;\r\n    padding: 1rem 0;\r\n    text-align: center;\r\n  border: 1px solid black;\r\n  }\r\n  input[type=\"submit\"] {\r\n      margin-top: .75rem;\r\n    width: 5rem;\r\n    background: #eb7012;\r\n    color: white;\r\n    border-radius: 5px;\r\n    border: none;\r\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  }\r\n  .loginLinks {\r\n      display: flex;\r\n      flex-direction: column;\r\n      padding: .5rem 0;\r\n  }\r\n  .loginLinks button {\r\n      background: #128DEB;\r\nmargin: .5rem;\r\n      padding: 1rem;\r\n      color: white;\r\n      border-radius: 5px;\r\n      box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  }\r\n`;\r\n\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router\"\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport default function Login() {\r\n    const history = useHistory()\r\n    const [state, setState] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n\r\n    })\r\n    function handleChange(event) {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n        event.preventDefault()\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n\r\n        event.preventDefault()\r\n        fetch(\"/api/v1/users/add\", {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                firstName: state.firstName,\r\n                lastName: state.lastName,\r\n                email: state.email,\r\n                password: state.password\r\n            })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (Object.prototype.hasOwnProperty.call(data, \"error\")) {\r\n                    setState({\r\n                        error: data.error,\r\n                        firstName: \"\",\r\n                        lastName: \"\",\r\n                        email: \"\",\r\n                        password: \"\"\r\n                    });\r\n\r\n                }\r\n                if (Object.prototype.hasOwnProperty.call(data, \"token\")) {\r\n                    sessionStorage.setItem(\"token\", data.token);\r\n                    sessionStorage.setItem(\"First Name\", data.firstName);\r\n                    sessionStorage.setItem(\"Last Name\", data.lastName);\r\n\r\n                    history.push(\"/tickets\");\r\n                }\r\n            });\r\n    }\r\n    return (\r\n        <LoginWrapper>\r\n            <LoginForm onSubmit={handleSubmit}>\r\n                <h1>Delivery Notes</h1>\r\n                <h4>{state.error}</h4>\r\n                <input\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    value={state.firstName}\r\n                    onChange={handleChange}\r\n                />\r\n                <input\r\n                    name=\"lastName\"\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    value={state.lastName}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={state.email}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={state.password}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <input type=\"submit\" value=\"Submit\" onClick={handleSubmit} />\r\n\r\n            </LoginForm>\r\n        </LoginWrapper>\r\n    )\r\n}\r\n\r\nconst LoginWrapper = styled.div`\r\nbackground:#128DEB;\r\nheight: 100vh;\r\nwidth: 100%;\r\n\r\n`\r\n\r\nconst LoginForm = styled.form`\r\n    position: absolute;\r\n    top: 10%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    left: 0;\r\n    right: 0;\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: white;\r\n    width: 30rem;\r\n    padding: 2rem 0;\r\n    border-radius: 10px;\r\n  \r\n  h1{\r\n    text-align: center;\r\n    color: #0d62a4;\r\n    padding-bottom: .5rem;  \r\n  }\r\n\r\n  h4{\r\n      color: red;\r\n  }\r\n  \r\n  input {\r\n    width: 20rem;\r\n    margin: 0.5rem 0;\r\n    padding: 1rem 0;\r\n    text-align: center;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n  input[type=\"submit\"] {\r\n      margin-top: .75rem;\r\n    width: 5rem;\r\n    background: #eb7012;\r\n    color: white;\r\n  }\r\n \r\n`;\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from \"styled-components\"\r\n\r\nexport default function CreateTicket() {\r\n    let history = useHistory()\r\n    const [projects, setProjects] = useState([])\r\n    const [state, setState] = useState({\r\n        project: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        ticketType: \"\",\r\n        ticketPriority: \"\",\r\n        user: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        async function fetchProjects() {\r\n            const response = await fetch(\"/api/v1/projects/dropdown\")\r\n            const json = await response.json()\r\n            const data = json.data\r\n            data.unshift({ _id: 0, title: \"-\" })\r\n            setProjects(json.data)\r\n        }\r\n        fetchProjects()\r\n    }, [])\r\n\r\n    function handleChange(event) {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        const firstName = sessionStorage.getItem(\"firstName\")\r\n        const lastName = sessionStorage.getItem(\"lastName\")\r\n        const fullName = `${firstName} ${lastName}`\r\n        if (sessionStorage.getItem(\"demo\") !== null) {\r\n            await fetch(\"/api/v1/tickets\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    project: state.project,\r\n                    title: state.title,\r\n                    description: state.description,\r\n                    assignedDev: fullName,\r\n                    submitter: fullName,\r\n                    ticketPriority: state.ticketPriority,\r\n                    ticketType: state.ticketType\r\n                })\r\n            })\r\n        }\r\n        history.push(\"/tickets\")\r\n    }\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n\r\n            <button className=\"closeBtn\" onClick={() => { history.push(\"/tickets\") }}>Close X</button>\r\n            <h1>Create A Ticket</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Project\r\n                        <select\r\n                        name=\"project\"\r\n                        value={state.project}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {projects.map((project, _id) => (\r\n                            < option key={project._id} value={project.title} >  { project.title}</option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n                <input\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    value={state.title}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Title\"\r\n                />\r\n\r\n                <input\r\n                    name=\"description\"\r\n                    type=\"text\"\r\n                    value={state.description}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Description\"\r\n                />\r\n                <label>\r\n                    Ticket Priority\r\n                        <select\r\n                        name=\"ticketPriority\"\r\n                        value={state.ticketPriority}\r\n                        onChange={handleChange}>\r\n                        <option value=\"\">-</option>\r\n                        <option value=\"Lowest\">Lowest</option>\r\n                        <option value=\"Low\">Low</option>\r\n                        <option value=\"Medium\">Medium</option>\r\n                        <option value=\"High\">High</option>\r\n                        <option value=\"Highest\">Highest</option>\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    Ticket Type\r\n                        <select\r\n                        name=\"ticketType\"\r\n                        value={state.ticketType}\r\n                        onChange={handleChange}>\r\n                        <option value=\"\">-</option>\r\n                        <option value=\"Bug\">Bug</option>\r\n                        <option value=\"New Feature\">New Feature</option>\r\n                        <option value=\"Improvement\">Improvement</option>\r\n                        <option value=\"Task\">Task</option>\r\n                        <option value=\"Testing\">Testing</option>\r\n                    </select>\r\n                </label>\r\n                <button onClick={handleSubmit} className=\"submitBtn\">Submit</button>\r\n            </form>\r\n\r\n\r\n\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div` \r\nposition: absolute;\r\ntop: 15%;\r\nleft: 14%;\r\nwidth: 80%;\r\nheight: 80%;\r\nbackground:#128DEB;\r\nborder-radius: 10px;\r\n\r\nform{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    @media (max-width:800px) {\r\n    margin: 1rem;\r\n\r\n    }\r\n}\r\n\r\nh1 {\r\n    font-size: 2.5rem;\r\n    text-align: center;\r\n    padding:  .5rem 0;\r\n    margin-top: .5rem;\r\n    color: white;\r\n    @media (max-width: 650px) {\r\n        font-size: 1.5rem;\r\n        text-align:left;\r\n        margin-left: 1rem;\r\n    }\r\n}\r\nlabel{\r\n    color: white;\r\n}\r\n\r\ninput[type=text]{\r\n    width: 50%;\r\n    padding: 1.5rem;\r\n    margin: .75rem;\r\n}\r\n\r\nselect{\r\n    padding: 1.5rem;\r\n    margin: .5rem;\r\n}\r\n\r\n.submitBtn{\r\n    width: 8rem;\r\n    padding: 1.5rem;\r\n    margin: .5rem;\r\n    background: #EB7012;\r\n    color: white;\r\n    border-radius: 5px;\r\n}\r\n.closeBtn{\r\n    background: #EB7012;\r\n    border-radius: 5px;\r\n    padding: 1rem;\r\n    margin: .5rem;\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 15px;\r\n    color: white;\r\n    @media (max-width: 800px) {\r\n        top: 2px;\r\n        right: 2px;\r\n    }\r\n}\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Sidebar from \"../components/Sidebar\"\r\nimport CreateTicketComponent from \"../components/CreateTicketComponent\"\r\n\r\nexport default function Projects() {\r\n    return (\r\n        <div>\r\n            <Main>\r\n                <Header />\r\n                <Sidebar />\r\n                <CreateTicketComponent />\r\n            </Main>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 150px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar projectarea projectarea\";\r\ngrid-gap: 0;\r\nbackground: white;\r\n\r\n@media (max-width: 1050px) {\r\n grid-template-columns: 1fr;\r\n grid-template-areas:\r\n\"header\"\r\n\"sidebar\"\r\n\"projectarea\";\r\n}\r\n`;\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\n\r\nexport default function AddProjectComponent() {\r\n    let history = useHistory()\r\n    const [state, setState] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n    })\r\n    function handleChange(event) {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault()\r\n        if (sessionStorage.getItem(\"demo\") !== null) {\r\n            await fetch(\"api/v1/projects\", {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    title: state.title,\r\n                    description: state.description\r\n                })\r\n            })\r\n        }\r\n        history.push(\"/projects\")\r\n    }\r\n\r\n    return (\r\n        <Wrapper >\r\n            <button className=\"closeBtn\" onClick={() => history.push(\"/projects\")} > Close</button>\r\n            <h1>Add Project</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    value={state.title}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Title\"\r\n                />\r\n\r\n                <input\r\n                    name=\"description\"\r\n                    type=\"text\"\r\n                    value={state.description}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Description\"\r\n                />\r\n                <button onClick={handleSubmit} className=\"submitBtn\">Submit</button>\r\n            </form>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div` \r\nposition: absolute;\r\ntop: 15%;\r\nleft: 14%;\r\nwidth: 80%;\r\nheight: 80%;\r\nbackground:#128DEB;\r\nborder-radius: 10px;\r\n@media (max-width:800px) {\r\n    height: auto;\r\n}\r\n\r\nform{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\nh1 {\r\n    font-size: 2.5rem;\r\n    text-align: center;\r\n    padding:  .5rem 0;\r\n    margin-top: 5rem;\r\n    color: white;\r\n}\r\nlabel{\r\n    color: white;\r\n}\r\n\r\ninput[type=text]{\r\n    width: 50%;\r\n    padding: 1.5rem;\r\n    margin: .75rem;\r\n}\r\n\r\nselect{\r\n    padding: 1.5rem;\r\n    margin: .5rem;\r\n}\r\n\r\n.submitBtn{\r\n    width: 8rem;\r\n    padding: 1.5rem;\r\n    margin: .5rem;\r\n    background: #EB7012;\r\n    color: white;\r\n    border-radius: 5px;\r\n}\r\n.closeBtn{\r\n    background: #EB7012;\r\n    border-radius: 5px;\r\n    padding: 1rem;\r\n    margin: .5rem;\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 15px;\r\n    color: white;\r\n}\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Sidebar from \"../components/Sidebar\"\r\nimport AddProjectComponent from \"../components/AddProjectComponent\"\r\n\r\nexport default function Projects() {\r\n    return (\r\n        <div>\r\n            <Main>\r\n                <Header />\r\n                <Sidebar />\r\n                <AddProjectComponent />\r\n            </Main>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 150px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar projectarea projectarea\";\r\ngrid-gap: 0;\r\nbackground: white;\r\n\r\n@media (max-width: 800px) {\r\n grid-template-columns: 1fr;\r\n grid-template-areas:\r\n\"header\"\r\n\"sidebar\"\r\n\"projectarea\";\r\n}\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport TicketDetails from \"./TicketDetails\"\r\n\r\n\r\nexport default function ProjectTicketList() {\r\n\r\n    let history = useHistory()\r\n    const passedData = history.location.state.data\r\n    const [tickets, updateTickets] = useState([])\r\n    const [ticketIndex, updateticketIndex] = useState(\"0\")\r\n\r\n    useEffect(() => updateTickets(passedData.tickets), [passedData])\r\n\r\n    const dateConverter = (dateTime) => {\r\n        const date = dateTime.substr(0, 10).split(\"-\")\r\n        date.push(date.splice(0, 1)[0])\r\n        return date.join(\"/\")\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            < div >\r\n                <TableTitle>\r\n                    <h3>Tickets for {passedData.title}</h3>\r\n                    <button onClick={() => { history.push(\"/createtickets\") }}>Create A Ticket</button>\r\n                </TableTitle>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Created</th>\r\n                            <th>Assigned Developer</th>\r\n                            <th>Ticket Priority</th>\r\n                            <th>Ticket Status</th>\r\n                            <th>Ticket Type</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tickets.map((ticket, index) => (\r\n                            <tr key={index} onClick={() => updateticketIndex(index)}>\r\n                                <td>{ticket.title}</td>\r\n                                <td>{dateConverter(ticket.createdOn)}</td>\r\n                                <td>{ticket.assignedDev}</td>\r\n                                <td>{ticket.ticketPriority}</td>\r\n                                <td>{ticket.ticketStatus}</td>\r\n                                <td>{ticket.ticketType}</td>\r\n                            </tr>\r\n                        ))}\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            { !!tickets.length && <TicketDetails key={tickets._id} data={tickets[ticketIndex]} />}\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nconst Wrapper = styled.div` \r\ndisplay: flex;\r\nflex: 1;\r\njustify-content: space-between;\r\nbackground: white;\r\ngrid-area: ticketarea;\r\nheight: calc(100vh - 4.25rem);\r\noverflow-y: scroll;\r\n\r\n@media only screen and  (max-width: 800px){\r\n    flex-direction: column;\r\n    table, thead, tbody, th, td, tr {\r\n    display: block;\r\n  }\r\n  thead tr {\r\n    position: absolute;\r\n    top: -9999px;\r\n    left: -9999px;\r\n  }\r\n  tr { border: 1px solid #ccc; }\r\n  td {\r\n    border: none;\r\n    border-bottom: 1px solid #eee;\r\n    position: relative;\r\n    padding-left: 200px;\r\n    margin-left: 150px;\r\n  }\r\n  td:before {\r\n    position: absolute;\r\n    top: 12px;\r\n    left: 6px;\r\n    width: 200px;\r\n    padding-right: 40px;\r\n    white-space: nowrap;\r\n    margin-left: -150px;\r\n  }\r\n  td:nth-of-type(1):before { content: \"Title\"; }\r\n  td:nth-of-type(2):before { content: \"Created\"; }\r\n  td:nth-of-type(3):before { content: \"Assigned Developer\"; }\r\n  td:nth-of-type(4):before { content: \"Ticket Priority\";}\r\n  td:nth-of-type(5):before {content: \"Ticket Status\"}\r\n  td:nth-of-type(6):before {content: \"Ticket Type\"}\r\n}\r\n`\r\n\r\nconst Table = styled.table`\r\nwidth: 100%;\r\nborder-collapse: collapse;\r\n\r\nthead th {\r\n    padding: 0.5rem;\r\n    text-align: left;\r\n    background: #e7f3fd;\r\n}\r\n\r\ntd{\r\n  padding: 0.5rem;\r\n  text-align: left;\r\n  border-bottom: solid 1px #EEE;\r\n}\r\n\r\ntr{\r\n  ${'' /* height: 2rem; */}\r\n}\r\ntbody tr {\r\n    cursor: pointer;\r\n}\r\n`\r\n\r\nconst TableTitle = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding: 1rem 1rem;\r\n\r\nh3 {\r\n    padding-top: .25rem; \r\n}\r\nbutton {\r\n      padding: .5rem;\r\n      background: #eb7012;\r\n      color: white;\r\n      border-radius: 5px;\r\n}\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\nimport Sidebar from '../components/Sidebar';\r\nimport ProjectTicket from \"../components/ProjectTicketList\"\r\n\r\nexport default function Tickets() {\r\n    return (\r\n        <div>\r\n            <Main>\r\n                <Header />\r\n                <Sidebar />\r\n                <ProjectTicket />\r\n            </Main>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Main = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 130px 1fr 1fr;\r\ngrid-template-rows: 65px 1fr;\r\ngrid-template-areas:\r\n\"header header header\"\r\n\"sidebar ticketarea ticketarea\";\r\ngrid-gap: 0;\r\n\r\n@media (max-width: 800px) {\r\n grid-template-columns: 1fr;\r\n grid-template-areas:\r\n\"header\"\r\n\"sidebar\"\r\n\"ticketarea\";\r\n}\r\n`;","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport GlobalStyle from './styles/global';\nimport Tickets from './pages/Tickets';\nimport Dashboard from './pages/Dashboard';\nimport ManageRoles from './pages/ManageRoles';\nimport ManageUsers from './pages/ManageUsers';\nimport Projects from './pages/Projects';\nimport Login from \"./pages/Login\"\nimport Register from \"./pages/Register\"\nimport CreateTicket from './pages/CreateTicket';\nimport CreateProject from \"./pages/CreateProject\"\nimport ProjectTicket from \"./pages/ProjectTicket\"\n\nfunction App() {\n  return (\n    <div>\n      <GlobalStyle />\n      <HashRouter>\n        <Switch>\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/createtickets\" component={CreateTicket} />\n          <Route path=\"/addproject\" component={CreateProject} />\n          <Route path=\"/projectticket\" component={ProjectTicket} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/manageroles\" component={ManageRoles} />\n          <Route path=\"/manageusers\" component={ManageUsers} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/tickets\" component={Tickets} />\n          <Route path=\"/register\" component={Register} />\n\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}